name: Update JIRA Fix versions

on:
  create:
    tags: true

jobs:
  update-jira-fix-versions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: List the ticket numbers to be updated in Jira and set the 'Fix Version' field to the value obtained from the created tag.
        run: |
          set -euo pipefail
          
          TAG_PREFIX="core-"

          NEW_TAG="${GITHUB_REF#refs/tags/}"
          echo "New tag: $NEW_TAG"

          if [[ "$NEW_TAG" =~ ^(${TAG_PREFIX}[0-9]+\.) ]]; then
            SERIES_PREFIX="${BASH_REMATCH[1]}"
            echo "Detected series prefix: $SERIES_PREFIX"
          else
            echo "Tag '$NEW_TAG' does not match expected format '${TAG_PREFIX}<YEAR>.' — exiting."
            exit 1
          fi

          mapfile -t SERIES_TAGS < <(git tag --list "${SERIES_PREFIX}*" | sort -rV)

          echo "Tags in the series (sorted descending):"
          for tag in "${SERIES_TAGS[@]}"; do
            echo "   - $tag"
          done

          echo "Finding index of current tag '$NEW_TAG' in the series tags list."
          CURRENT_INDEX=-1
          for i in "${!SERIES_TAGS[@]}"; do
            echo "Comparing with: ${SERIES_TAGS[$i]}"
            if [[ "${SERIES_TAGS[$i]}" == "$NEW_TAG" ]]; then
              CURRENT_INDEX=$i
              echo "Found at index: $CURRENT_INDEX"
              break
            fi
          done

          # Handle error if tag not found
          if (( CURRENT_INDEX == -1 )); then
            echo "Could not find tag '$NEW_TAG' in series — aborting."
            exit 1
          fi

          # Check if there's a previous tag
          if (( CURRENT_INDEX + 1 >= ${#SERIES_TAGS[@]} )); then
            echo "No earlier tag in the same series — nothing to compare."
            exit 0
          fi

          PREVIOUS_TAG="${SERIES_TAGS[$((CURRENT_INDEX + 1))]}"
          echo "Previous tag in series: $PREVIOUS_TAG"

          # Show the commit diff between the two tags
          echo "Commits between:"
          echo "$PREVIOUS_TAG"
          echo "$NEW_TAG"

          echo "Commits list:"
          git log --pretty=format:'%h %s' "$PREVIOUS_TAG..$NEW_TAG"